create schema companany;
set search_path to company;

create table employee(
fname text not null,
mname text not null,
lname text not null,
ssn char(9) not null primary key,
bdate date,
address text not null,
sex char null,
salary decimal(10,2) null,
super_ssn char(9) null,
dno int not null);




create table department(
dname text not null,
dnumber int not null primary key,
mgr_ssh char(9) not null,
mgr_start_date date null);


create table dept_location(
dnumber int not null,
dlocation text not null,
primary key(dnumber, dlocation));


create table project(
pname text not null,
pnumber int not null,
plocation text,
dnum int not null,
primary key(pnumber),
unique(pname));



create table work_on(
essn char(9) not null,
pno int not null,
house decimal(3,1) not null,
primary key(essn, pno));


create table dependent(
essn char(9) not null,
dependent_name text not null,
sex char,
bdate date,
relationship text,
primary key(essn, dependent_name));



insert into employee values ('john', 'B', 'smith', '123456789', '1965-01-09', '731 fondern, houston, tx', 'm', '30000', '333445555', '5');



select * from employee;

insert into employee values ('john', 'B', 'smith', '123456789', '1965-01-09', '731 fondern, houston, tx', 'm', '30000', '333445555', '5');
insert into department values ('research', '1', '33344555', '1988-05-22');
insert into dependent values ('333445555', 'theodore', 'm', '1983-10-25', 'son');
insert into project values ('productx', '1', 'bellaire', '5');
insert into work_on values ('123456789', '1', '32.5');
insert into dept_location values ('1', 'houston');





insert into employee values ('franklin', 'T', 'wong', '333445555', '1955-01-09', '638 fondern, houston, tx', 'm', '40000', '888665555', '5');
insert into department values ('adminitration', '4', '333445555', '1955-12-08');
insert into dependent values ('333445555', 'alice', 'f', '1995-01-01', 'douhgter');
insert into project values ('producty', '2', 'sugarland', '5');
insert into work_on values ('123456789', '2', '7.5');
insert into dept_location values ('4', 'stafford');



alter table department add foreign key (mgr_ssh) references employee(ssn);




alter table dependent add foreign key(essn) references employee(ssn);

postgres=> alter table project add foreign key(dnum) references department(dnumber);

alter table work_on add foreign key(pno) references project(pnumber);

alter table work_on add foreign key(pno) references employee(dno);



alter table work_on add foreign key(essn) references employee(ssn);
alter table work_on add foreign key(pno) references employee(ssn);

alter table dept_location add foreign key(dnumber) references department(dnumber);


alter table employee add foreign key(dno) references department(dnumber);


update employee set salary ='45000' where fname ='john';



                         select


select fname, lname from employee where dno ='5';




select pnumber, dnum, lname, address, bdate
from project, department, employee
where dnum=dnumber and plocation = 'bellarie';



select pnumber, dnum, lname, address, bdate
from project, department, employee
where dnum=dnumber;



select e.fname, e.lname, s.fname, s.lname
from employee as e, employee as s
where e.super_ssn = s.ssn;

select distinct salary from employee;

select *
from employee, department
where dname = 'adminitration' and dno = dnumber;


    
         operators




(select distinct pnumber
from project, department,employee
where dnum = dnumber and mgr_ssh = ssn and lname = 'smith')
union
(select distinct pnumber
from project, work_on, employee
where pnumber = pno and essn = ssn and lname = 'smith');

select fname, lname
from employee
where not exists (select * from dependent where ssn = essn);



select fname, lname
from employee
where exists (select * from dependent where ssn = essn);



select fname, lname
from employee
where exists (select * from dependent where ssn = essn) and exists (select * from department where ssn = mgr_ssn);


select ssn, fname
from employee
where address like '%houston%';

select fname, ssn
from employee
where fname like '-----';



select * from employee where (salary between 30000 and 40000);


select e.fname, 1.2 * e.salary as increased_sal
from employee as e, work_on as w, project as p
where e.ssn = w.essn and w.pno = p.pnumber and p.pname = 'producty';

select *
from employee where super_ssn is null;



select sum(salary), min(salary), max(salary) from employee;

select count(distinct salary) from employee;


select * 
from employee order by salary desc;


select dno, count(*)
from employee
group by dno;


select pnumber, count(*)
from project, work_on
where pnumber = pno
group by pnumber
having count (*)> 3;



select pnumber, count(*)
from project, work_on
where pnumber = pno
group by pnumber
having count (*)> 1;




select * from work_on limit 4;


select * from work_on offset 1 limit 3;



select * from work_on fetch first 8 rows only;

       JOINTS


select ssn, fname, dependent.dependent_name, dependent.relationship
from employee
left join dependent on employee.ssn = dependent.essn;


select ssn, fname, dependent.dependent_name, dependent.relationship
from employee
right join dependent on employee.ssn = dependent.essn;


select ssn, fname
from employee
inner join dependent on employee.ssn = dependent.essn;


select ssn, fname
from employee
full join dependent on employee.ssn = dependent.essn;


   view


create view work_on1
AS select fname, lname, pname
from employee, project,work_on
where  ssn = essn and pno = pnumber;


 select * from work_on1;

         PROCEDURE

create table tbl1(tbl1 int);
create table tbl2(tbl2 int);


create procedure insert_values(x integer, y integer)
language sql
as $$
insert into tbl1 values(x);
insert into tbl2 values(y);
$$;

call insert_values(1,2);


select * from tbl1;


select * from tbl2; 

    trigger




create table audit(emoid char(9) not null, entrydate text not null);





create table audit(emoid char(9) not null, entrydate text not null);
create  or replace function auditlogfunc() returns trigger as $example_table$
begin
insert into audit(emoid, entrydate) values (new.ssn, current_timestamp);
return new;
end;
$example_table$ language plpgsql;
create trigger example_table after insert on employee for each row execute procedure auditlogfunc();
insert into employee values ('panj', 'B', 'smth', '233456789', '1935-11-09', '731 forn, houston, tx', 'm', '33000', '333445555', '5');



grant select on tbl1 to public;

grant insert on employee to public;

revoke insert on employee from public;



insert into tbl1 values ('2');
insert into tbl1 values ('3');
insert into tbl1 values ('4');
insert into tbl1 values ('5');
insert into tbl1 values ('6');
insert into tbl1 values ('7');
insert into tbl1 values ('8');

begin;
delete from tbl1 where tbl1 > '5';
rollback;


begin;
delete from tbl1 where tbl1 > '5';
commit;

select * from pg_available_extensions;

create extension if not exists "uuid-ossp";

select uuid_generate_v4();



